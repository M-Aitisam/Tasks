@page "/registration"
@using System.ComponentModel.DataAnnotations

<h3>Registration Form</h3>

<EditForm Model="@registrationModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name:</label>
        <InputText id="firstName" class="form-control" Placeholder="Enter your First Name " @bind-Value="registrationModel.FirstName" />
        <ValidationMessage For="@(() => registrationModel.FirstName)" class="text-danger" />
    </div>

    <div class="form-group">        
        <InputText id="lastName" class="form-control" Placeholder="Enter your Last Name" @bind-Value="registrationModel.LastName" />
        <ValidationMessage For="@(() => registrationModel.LastName)" class="text-danger" />
    </div>

    <div class="form-group">
       
        <InputText id="email" class="form-control" Placeholder="Enter your Email" @bind-Value="registrationModel.Email" />
        <ValidationMessage For="@(() => registrationModel.Email)" class="text-danger" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Submit</button>
</EditForm>

@if (isSubmitted)
{
    <div class="alert alert-success mt-3">
                       <p>Form submitted successfully!</p>
    </div>
}

@code {
    private RegistrationModel registrationModel = new();
    private bool isSubmitted = false;

    private void HandleValidSubmit()
    {
        isSubmitted = true;
    }

    public class RegistrationModel
    {
        [Required(ErrorMessage = "First name is required.")]
        public string FirstName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Last name is required.")]
        public string LastName { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; } = string.Empty;
    }
}
